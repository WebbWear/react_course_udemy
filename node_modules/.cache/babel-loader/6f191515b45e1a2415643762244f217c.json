{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/jeff/Code-learning/react-complete-guide/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/jeff/Code-learning/react-complete-guide/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/jeff/Code-learning/react-complete-guide/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/jeff/Code-learning/react-complete-guide/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/jeff/Code-learning/react-complete-guide/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _assertThisInitialized = require(\"/Users/jeff/Code-learning/react-complete-guide/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar CoaParam = require('./coaparam'),\n    chalk = require('chalk');\n/**\n * Argument\n *\n * Unnamed entity. From command line arguments passed as list of unnamed values.\n *\n * @class Arg\n * @extends CoaParam\n */\n\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_CoaParam) {\n  _inherits(Arg, _CoaParam);\n\n  /**\n   * @constructs\n   * @param {COA.Cmd} cmd - parent command\n   */\n  function Arg(cmd) {\n    var _this;\n\n    _classCallCheck(this, Arg);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Arg).call(this, cmd));\n\n    _this._cmd._args.push(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(Arg, [{\n    key: \"_saveVal\",\n    value: function _saveVal(args, val) {\n      this._val && (val = this._val(val));\n      var name = this._name;\n      this._arr ? (args[name] || (args[name] = [])).push(val) : args[name] = val;\n      return val;\n    }\n  }, {\n    key: \"_parse\",\n    value: function _parse(arg, args) {\n      return this._saveVal(args, arg);\n    }\n  }, {\n    key: \"_checkParsed\",\n    value: function _checkParsed(opts, args) {\n      return !args.hasOwnProperty(this._name);\n    }\n  }, {\n    key: \"_usage\",\n    value: function _usage() {\n      var res = [];\n      res.push(chalk.magentaBright(this._name.toUpperCase()), ' : ', this._title);\n      this._req && res.push(' ', chalk.redBright('(required)'));\n      return res.join('');\n    }\n  }, {\n    key: \"_requiredText\",\n    value: function _requiredText() {\n      return \"Missing required argument:\\n  \".concat(this._usage());\n    }\n  }]);\n\n  return Arg;\n}(CoaParam);","map":null,"metadata":{},"sourceType":"script"}